@using Booking_Backend.Repository.Paging.ViewModel;
@model PageResult<Booking_Backend.Repository.ExtensionTypeRoom.ViewModel.ExtensionTypeRoomViewModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row" style="margin-bottom: 15px">
        <div class="col-md-11">
            <div class="block-add-hoteltype" style="border: thin solid #ccc; border-radius: 7px">
                <form asp-action="create" asp-controller="extensiontype" method="post">
                    <div class="row p-2">
                        <div class="col-md-4">
                            <input type="text" class="form-control" name="name" placeholder="Tên tiện ích" />
                        </div>
                        <div class="col-md-4">
                            <button type="submit" class="btn btn-info text-light">Thêm tiện ích</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-11">
            <div class="card mb-4" style="overflow-x: scroll; ">
                <div class="card-body">
                    <table class="table table-hover table-bordered" style="width: 100%">
                        <thead>
                            <tr>
                                <th>
                                    STT
                                </th>
                                <th>
                                    Id
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Language
                                </th>
                                <th>
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>
                                    STT
                                </th>
                                <th>
                                    Id
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Language
                                </th>
                                <th>
                                    Action
                                </th>
                            </tr>
                        </tfoot>
                        <tbody>
                            @{
                                int count = 0;
                                foreach (var item in Model.Items)
                                {
                                    count++;
                                    <form asp-action="update" asp-controller="extensiontype" method="post">
                                    <tr class="data-viewer">
                                        <td class="text-nowrap">
                                                @count
                                        </td>
                                        <td class="text-nowrap">
                                            <div>@Html.DisplayFor(modelItem => item.Id)</div>
                                            <input type="hidden" name="Id" value="@item.Id" />
                                        </td>
                                        <td class="text-nowrap">
                                            <div class="name-text">@Html.DisplayFor(modelItem => item.Name)</div>
                                            <input name="Name" class="name-input form-control" style="display: none" type="text" value="@item.Name" />
                                        </td>
                                        <td class="text-nowrap">
                                                @Html.DisplayFor(modelItem => item.LanguageId)
                                            <input type="hidden" name="LanguageId" value="@item.LanguageId" />
                                        </td>
                                        <td class="text-nowrap">
                                            <a onclick="setTimeout(()=> {location.reload()},1000)" href="extensiontype/delete/@Html.DisplayFor(modelItem => item.Id)">
                                                <div class="btn btn-danger text-light">Xóa</div>
                                            </a>
                                            <div class="btn-update btn btn-warning text-light">Cập nhật</div>
                                            <div style="display: none" class="btn-cancel btn btn-warning text-light">Hủy</div>
                                            <button type="submit" class="btn-save btn btn-info text-light" style="display:none">Lưu thay đổi</button>
                                        </td>
                                    </tr>
                                    </form>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("Pager", Model)
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var updateButtons = document.querySelectorAll(".btn-update");
        var cancelButtons = document.querySelectorAll(".btn-cancel");

        updateButtons.forEach(function (button) {
            button.addEventListener("click", function () {
                var row = button.parentNode.parentNode;
                var nameText = row.querySelector(".name-text");
                var nameInput = row.querySelector(".name-input");
                var btnSave = row.querySelector(".btn-save");
                var btnUpdate = row.querySelector(".btn-update");
                var btnCancel = row.querySelector(".btn-cancel");

                // Hiện input và ẩn text
                nameText.style.display = "none";
                nameInput.style.display = "inline";
                btnSave.style.display = "inline";
                btnCancel.style.display = "inline";
                btnUpdate.style.display = "none";

                // Focus vào input khi được hiện
                nameInput.focus();
            });
        });

        cancelButtons.forEach(function (button) {
            button.addEventListener("click", function () {
                var row = button.parentNode.parentNode;
                var nameText = row.querySelector(".name-text");
                var nameInput = row.querySelector(".name-input");
                var btnSave = row.querySelector(".btn-save");
                var btnUpdate = row.querySelector(".btn-update");
                var btnCancel = row.querySelector(".btn-cancel");

                // Hiện input và ẩn text
                nameText.style.display = "inline";
                nameInput.style.display = "none";
                btnSave.style.display = "none";
                btnCancel.style.display = "none";
                btnUpdate.style.display = "inline";

            });
        });
    });
</script>
